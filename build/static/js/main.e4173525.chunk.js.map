{"version":3,"sources":["hooks/useFetch.js","components/Latest.js","components/NowPlaying.js","components/Popular.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","method","options","useState","response","setResponse","error","setError","loading","setLoading","baseUrl","apiKey","useEffect","endpoint","console","log","a","fetch","res","json","fetchData","Latest","message","NowPlaying","className","results","map","movie","src","poster_path","alt","title","overview","vote_average","vote_count","id","Popular","App","selectedTab","selectTab","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4173525.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useFetch = (url, method = 'GET',  options = {}) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const baseUrl = 'https://api.themoviedb.org/3/movie'\n  const apiKey = '77c57d7fc2e5ee5e5664c1a03edf9f29'\n\n  useEffect(() => {\n    const endpoint = `${baseUrl}${url}?api_key=${apiKey}`\n    console.log(endpoint)\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options,\n        });\n        const json = await res.json();\n\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false)\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return { response, error, loading };\n};\n\nexport default useFetch\n","import React from 'react'\nimport useFetch from '../hooks/useFetch'\n\nconst Latest = () => {\n  const { loading, response, error } = useFetch('/latest')\n\n  console.log('latest', { loading, response, error })\n  return (\n    <div>\n      <h3>Latest Movies</h3>\n      {loading\n        ? <span>Loading...</span>\n        : error\n          ? <span>{error?.message}</span>\n          : <div></div>}\n    </div>\n  )\n}\n\nexport default Latest\n","import React from 'react'\nimport useFetch from '../hooks/useFetch'\n\nconst NowPlaying = () => {\n  const { loading, response, error } = useFetch('/now_playing')\n\n  console.log('now playing', { loading, response, error })\n  return (\n    <div>\n      <h3>Now Playing</h3>\n      {loading\n        ? <span>Loading...</span>\n        : error\n          ? <span>{error?.message}</span>\n          : (\n            <div className=\"row\">\n              {response?.results?.map((movie) => {\n                return (\n                  <div className=\"column\" key={movie?.id}>\n                    <img src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`} alt=\"\" />\n                    <h5>{movie?.title}</h5>\n                    <p>{movie?.overview}</p>\n                    <p>Rating: {movie?.vote_average} ({movie?.vote_count} votes)</p>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n    </div>\n  )\n}\n\nexport default NowPlaying\n","import React from 'react'\nimport useFetch from '../hooks/useFetch'\n\nconst Popular = () => {\n  const { loading, response, error } = useFetch('/popular')\n\n  console.log('popular', { loading, response, error })\n  return (\n    <div>\n      <h3>Popular Movies</h3>\n      {loading\n        ? <span>Loading...</span>\n        : error\n          ? <span>{error?.message}</span>\n          : (\n            <div className=\"row\">\n              {response?.results?.map((movie) => {\n                return (\n                  <div className=\"column\" key={movie?.id}>\n                    <img src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`} alt=\"\" />\n                    <h5>{movie?.title}</h5>\n                    <p>{movie?.overview}</p>\n                    <p>Rating: {movie?.vote_average} ({movie?.vote_count} votes)</p>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n    </div>\n  )\n}\n\nexport default Popular\n","import React, { useState } from 'react';\nimport './App.css';\nimport Latest from './components/Latest'\nimport NowPlaying from './components/NowPlaying';\nimport Popular from './components/Popular';\n\nconst App = () => {\n  const [selectedTab, selectTab] = useState('latest')\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <div onClick={() => selectTab('latest')}>Latest</div>\n        <div onClick={() => selectTab('now-playing')}>Now Playing</div>\n        <div onClick={() => selectTab('popular')}>Popular</div>\n        <div onClick={() => selectTab('top-rated')}>Top Rated</div>\n        <div onClick={() => selectTab('upcoming')}>Upcoming</div>\n      </nav>\n      <div className=\"content\">\n        {selectedTab === 'latest' && <Latest />}\n        {selectedTab === 'popular' && <Popular />}\n        {selectedTab === 'now-playing' && <NowPlaying />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}