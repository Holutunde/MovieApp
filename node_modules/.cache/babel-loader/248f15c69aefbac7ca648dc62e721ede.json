{"ast":null,"code":"var _jsxFileName = \"/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search(url, method = 'GET', options = {}) {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/search/movie?api_key=77c57d7fc2e5ee5e5664c1a03edf9f29&language=en-US&query=${search}&page=1&include_adult=false`;\n    console.log(endpoint);\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options\n        });\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: search,\n        onChange: handleSearch,\n        type: \"text\",\n        placeholder: \"search for a movie\",\n        i: true,\n        className: \"searchbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [\"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${response === null || response === void 0 ? void 0 : response.poster_path}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: response === null || response === void 0 ? void 0 : response.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, response === null || response === void 0 ? void 0 : response.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"qNGiB5cGoDPHL0Y8cNYAgil7yZk=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/Search.js"],"names":["React","useState","useEffect","Search","url","method","options","search","setSearch","response","setResponse","error","setError","loading","setLoading","endpoint","console","log","fetchData","res","fetch","json","handleSubmit","e","preventDefault","handleSearch","target","value","message","poster_path","title","id"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\n\n\n\nexport default function Search(url, method = 'GET',  options = {}) {\n\n   const [search, setSearch] = useState('')\n\n   const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/search/movie?api_key=77c57d7fc2e5ee5e5664c1a03edf9f29&language=en-US&query=${search}&page=1&include_adult=false`;\n    console.log(endpoint)\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options,\n        });\n        const json = await res.json();\n\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false)\n      }\n    };\n\n    fetchData();\n  }, [ ]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n     }\n\n     const handleSearch =(e) =>{\n\t  setSearch(e.target.value)\n    \n   \n    }\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n            <input\n             value={search}\n             onChange={handleSearch}\n             type=\"text\"\n             placeholder=\"search for a movie\"i\n             className=\"searchbox\"\n            />\n\t     <button type=\"submit\">Search</button>\n          </form>\n\t  <h3>Now Playing</h3>\n      {loading\n        ? <span>Loading...</span>\n        : error\n          ? <span>{error?.message}</span>\n          : (\n            <div className=\"row\">\n             \n                return (\n                  <div className=\"column\" key={response?.id}  >\n                    <img src={`https://image.tmdb.org/t/p/w500${response?.poster_path}`} alt=\"\"   />\n                    <h5>{response?.title}</h5>\n                    \n                   </div>\n                )\n           \n              </div> \n\t  )}\n       </>\n    )\n}\n\t\n\n"]},"metadata":{},"sourceType":"module"}