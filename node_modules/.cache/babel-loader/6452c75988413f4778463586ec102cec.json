{"ast":null,"code":"var _jsxFileName = \"/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/MovieDetail.js\",\n    _s = $RefreshSig$();\n\n// import React,{useEffect, useState} from 'react'\n// const MovieDetail = () => {\n//       const [display, setDisplay] = useState(null)\n//   useEffect(() => {\n//     const endpoint = `https://api.themoviedb.org/3/movie/{movieId}?api_key=8063bc7c0a515fe2409caee8d299de93&language=en-US`\n//     try {\n//             const response = fetch(endpoint);\n//             const data = response.json()\n//             setDisplay(data);\n//         } catch (err) {\n//             console.error(err);\n//         }\n//       },[]);\n// \treturn (\n//           <div className=\"row\">\n//                   {display?.results?.map((movie) => {\n//                    return (\n//                      <div className=\"column\" key={movie?.id}>\n//                        <img src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`} alt=\"\" />\n//                        <h5>{movie?.title}</h5>\n//                        <p>{movie?.overview}</p>\n//                        <p>Rating: {movie?.vote_average} ({movie?.vote_count} votes)</p>\n//                   </div>\n//                 )\n//               })}\n//           </div>\n// \t)\n// }\n// export default MovieDetail\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Popular = () => {\n  _s();\n\n  var _response$results;\n\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    response,\n    error\n  } = useFetch(`&i=${id}`);\n  console.log(\"Moviedetail\", {\n    loading,\n    response,\n    error\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upcoming Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: response === null || response === void 0 ? void 0 : (_response$results = response.results) === null || _response$results === void 0 ? void 0 : _response$results.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: movie === null || movie === void 0 ? void 0 : movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie === null || movie === void 0 ? void 0 : movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie === null || movie === void 0 ? void 0 : movie.vote_average, \" (\", movie === null || movie === void 0 ? void 0 : movie.vote_count, \" votes)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, movie === null || movie === void 0 ? void 0 : movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Popular, \"oRFFEb5FoaPp7ehfl3OiQTnLC94=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = Popular;\nexport default Popular;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popular\");","map":{"version":3,"sources":["/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/MovieDetail.js"],"names":["React","useParams","Link","useFetch","Popular","id","loading","response","error","console","log","message","results","map","movie","poster_path","title","overview","vote_average","vote_count"],"mappings":";;;AAAA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BL,QAAQ,CAAE,MAAKE,EAAG,EAAV,CAA7C;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B;AAAEJ,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAA3B;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAEJE,KAAK,gBACP;AAAA,gBAAOA,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEG;AAAd;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGJ,QADH,aACGA,QADH,4CACGA,QAAQ,CAAEK,OADb,sDACG,kBAAmBC,GAAnB,CAAwBC,KAAD,IAAW;AACjC,4BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AACE,YAAA,GAAG,EAAG,kCAAiCA,KAAlC,aAAkCA,KAAlC,uBAAkCA,KAAK,CAAEC,WAAY,EAD5D;AAEE,YAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,sBAAKD,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAIF,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEG;AAAX;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA,mCACWH,KADX,aACWA,KADX,uBACWA,KAAK,CAAEI,YADlB,QACkCJ,KADlC,aACkCA,KADlC,uBACkCA,KAAK,CAAEK,UADzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAA6BL,KAA7B,aAA6BA,KAA7B,uBAA6BA,KAAK,CAAET,EAApC;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAdA;AADH;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAjCD;;GAAMD,O;UACWH,S,EACsBE,Q;;;KAFjCC,O;AAmCN,eAAeA,OAAf","sourcesContent":["// import React,{useEffect, useState} from 'react'\n\n// const MovieDetail = () => {\n\n//       const [display, setDisplay] = useState(null)\n\n//   useEffect(() => {\n//     const endpoint = `https://api.themoviedb.org/3/movie/{movieId}?api_key=8063bc7c0a515fe2409caee8d299de93&language=en-US`\n\n//     try {\n//             const response = fetch(endpoint);\n//             const data = response.json()\n\n//             setDisplay(data);\n\n//         } catch (err) {\n//             console.error(err);\n//         }\n//       },[]);\n\n// \treturn (\n//           <div className=\"row\">\n//                   {display?.results?.map((movie) => {\n//                    return (\n//                      <div className=\"column\" key={movie?.id}>\n//                        <img src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`} alt=\"\" />\n//                        <h5>{movie?.title}</h5>\n//                        <p>{movie?.overview}</p>\n//                        <p>Rating: {movie?.vote_average} ({movie?.vote_count} votes)</p>\n//                   </div>\n//                 )\n//               })}\n//           </div>\n\n// \t)\n// }\n\n// export default MovieDetail\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst Popular = () => {\n  const { id } = useParams();\n  const { loading, response, error } = useFetch(`&i=${id}`);\n\n  console.log(\"Moviedetail\", { loading, response, error });\n  return (\n    <div>\n      <h3>Upcoming Movies</h3>\n      {loading ? (\n        <span>Loading...</span>\n      ) : error ? (\n        <span>{error?.message}</span>\n      ) : (\n        <div className=\"row\">\n          {response?.results?.map((movie) => {\n            return (\n              <div className=\"column\" key={movie?.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`}\n                  alt=\"\"\n                />\n                <h5>{movie?.title}</h5>\n                <p>{movie?.overview}</p>\n                <p>\n                  Rating: {movie?.vote_average} ({movie?.vote_count} votes)\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Popular;\n"]},"metadata":{},"sourceType":"module"}