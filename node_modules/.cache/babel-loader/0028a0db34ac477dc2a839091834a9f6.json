{"ast":null,"code":"var _jsxFileName = \"/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search({\n  selectTab,\n  selectedTab\n}) {\n  _s();\n\n  const {\n    loading,\n    response,\n    error\n  } = useFetch('/popular');\n  console.log(\"gadd\", selectedTab);\n  const [value, Setvalue] = useState(\" \");\n  const search = `https://api.themoviedb.org/3/search/movie?api_key=77c57d7fc2e5ee5e5664c1a03edf9f29&language=en-US&query=${value}&page=1&include_adult=false`;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(search).then(res => res.json()).then(data => selectTab(data === null || data === void 0 ? void 0 : data.results));\n  };\n\n  const handleSearch = e => {\n    Setvalue(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: handleSearch,\n        type: \"text\",\n        placeholder: \"search for a movie\",\n        i: true,\n        className: \"searchbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: selectedTab === null || selectedTab === void 0 ? void 0 : selectedTab.map(movie => {\n          /*#__PURE__*/\n          _jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 46\n          }, this);\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: movie === null || movie === void 0 ? void 0 : movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie === null || movie === void 0 ? void 0 : movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Rating: \", movie === null || movie === void 0 ? void 0 : movie.vote_average, \" (\", movie === null || movie === void 0 ? void 0 : movie.vote_count, \" votes)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, movie === null || movie === void 0 ? void 0 : movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"1RpE1+fw+LAA5Znb0d6R4AuagPA=\", false, function () {\n  return [useFetch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/Search.js"],"names":["React","useState","useEffect","useFetch","Search","selectTab","selectedTab","loading","response","error","console","log","value","Setvalue","search","handleSubmit","e","preventDefault","fetch","then","res","json","data","results","handleSearch","target","map","movie","poster_path","title","overview","vote_average","vote_count","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAGA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAhB,EAA0C;AAAA;;AAEzD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BN,QAAQ,CAAC,UAAD,CAA7C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,WAApB;AACI,QAAK,CAACM,KAAD,EAAQC,QAAR,IAAkBZ,QAAQ,CAAC,GAAD,CAA/B;AAGC,QAAMa,MAAM,GAAI,2GAA0GF,KAAM,6BAAhI;;AAGD,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEPC,IAAAA,KAAK,CAACJ,MAAD,CAAL,CACCK,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAUjB,SAAS,CAACiB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,OAAP,CAFzB;AAGA,GANG;;AAQC,QAAMC,YAAY,GAAGR,CAAD,IAAM;AACvBH,IAAAA,QAAQ,CAACG,CAAC,CAACS,MAAF,CAASb,KAAV,CAAR;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACS,MAAF,CAASb,KAArB;AACH,GAJA;;AAKD,sBACC;AAAA,4BACG;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAAA,8BACI;AACC,QAAA,KAAK,EAAEH,KADR;AAEC,QAAA,QAAQ,EAAEY,YAFX;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,WAAW,EAAC,oBAJb;AAIiC,QAAA,CAAC,MAJlC;AAKC,QAAA,SAAS,EAAC;AALX;AAAA;AAAA;AAAA;AAAA,cADJ,eAQG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAaD;AAAA,6BACQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGlB,WADH,aACGA,WADH,uBACGA,WAAW,CAAEoB,GAAb,CAAkBC,KAAD,IAAW;AAAE;AAAA,kBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;;AAC7B,8BACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACE;AAAK,cAAA,GAAG,EAAG,kCAAiCA,KAAlC,aAAkCA,KAAlC,uBAAkCA,KAAK,CAAEC,WAAY,EAA/D;AAAkE,cAAA,GAAG,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAIF,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEG;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCAAYH,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEI,YAAnB,QAAmCJ,KAAnC,aAAmCA,KAAnC,uBAAmCA,KAAK,CAAEK,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAA6BL,KAA7B,aAA6BA,KAA7B,uBAA6BA,KAAK,CAAEM,EAApC;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAbC;AAAA,kBADD;AAiCH;;GAzDuB7B,M;UAEaD,Q;;;KAFbC,M","sourcesContent":["import React,{useState ,useEffect} from 'react'\nimport useFetch from '../hooks/useFetch'\n\n\nexport default function Search({selectTab, selectedTab}) {\n\nconst { loading, response, error } = useFetch('/popular')\n\nconsole.log(\"gadd\", selectedTab)\n    const[value, Setvalue]=useState(\" \");\n   \n\n     const search = `https://api.themoviedb.org/3/search/movie?api_key=77c57d7fc2e5ee5e5664c1a03edf9f29&language=en-US&query=${value}&page=1&include_adult=false`;\n   \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n      \n\tfetch(search)\n\t.then((res) => res.json())\n\t.then((data) => selectTab(data?.results))\n}\n\n     const handleSearch =(e) =>{\n        Setvalue(e.target.value)\n        \n        console.log(e.target.value)\n    }\n    return (\n\t    <>\n        <form onSubmit={handleSubmit}>\n            <input\n             value={value}\n             onChange={handleSearch}\n             type=\"text\"\n             placeholder=\"search for a movie\"i\n             className=\"searchbox\"\n            />\n           <button type=\"submit\">Search</button>\n            \n        </form>\n\n\t   <div>\n            <div className=\"row\">\n              {selectedTab?.map((movie) => { <Search/>\n                return (\n                  <div className=\"column\" key={movie?.id}  >\n                    <img src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`} alt=\"\"   />\n                    <h5>{movie?.title}</h5>\n                    <p>{movie?.overview}</p>\n                    <p>Rating: {movie?.vote_average} ({movie?.vote_count} votes)</p>\n                   \n                   \n                  </div>\n                )\n              })}\n            </div>\n     \n    </div>\n    </>\n    )\n}\n\t"]},"metadata":{},"sourceType":"module"}