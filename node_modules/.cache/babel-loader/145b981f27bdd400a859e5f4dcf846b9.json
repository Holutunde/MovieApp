{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nconst useFetch = (url, method = 'GET', options = {}, search = false) => {\n  _s();\n\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const baseUrl = 'https://api.themoviedb.org/3/movie';\n  const apiKey = '77c57d7fc2e5ee5e5664c1a03edf9f29';\n  useEffect(() => {\n    const endpoint = `${baseUrl}${url}?api_key=${apiKey}?`;\n    console.log(endpoint);\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options\n        });\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return {\n    response,\n    error,\n    loading\n  };\n};\n\n_s(useFetch, \"49/I0r598LgCIIluHdgpQ1BsF8Y=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/olutundesokunbi/Documents/React/movie-stuff/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","method","options","search","response","setResponse","error","setError","loading","setLoading","baseUrl","apiKey","endpoint","console","log","fetchData","res","fetch","json"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,KAAf,EAAuBC,OAAO,GAAG,EAAjC,EAAqCC,MAAM,GAAG,KAA9C,KAAwD;AAAA;;AACvE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMY,OAAO,GAAG,oCAAhB;AAEA,QAAMC,MAAM,GAAG,kCAAf;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,QAAQ,GAAI,GAAEF,OAAQ,GAAEV,GAAI,YAAWW,MAAO,GAApD;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,UAAMG,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,QAAD,EAAW;AAChCX,UAAAA,MADgC;AAEhC,aAAGC;AAF6B,SAAX,CAAvB;AAIA,cAAMgB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AAEAb,QAAAA,WAAW,CAACa,IAAD,CAAX;AACD,OARD,CAQE,OAAOZ,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAVD,SAUU;AACRG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAdD;;AAgBAM,IAAAA,SAAS;AACV,GArBQ,EAqBN,EArBM,CAAT;AAuBA,SAAO;AAAEX,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAjCD;;GAAMT,Q;;AAmCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useFetch = (url, method = 'GET',  options = {}, search = false) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const baseUrl = 'https://api.themoviedb.org/3/movie'\n  \n  const apiKey = '77c57d7fc2e5ee5e5664c1a03edf9f29'\n\n  useEffect(() => {\n    const endpoint = `${baseUrl}${url}?api_key=${apiKey}?`\n    console.log(endpoint)\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options,\n        });\n        const json = await res.json();\n\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false)\n      }\n    };\n\n    fetchData();\n  }, [ ]);\n\n  return { response, error, loading };\n};\n\nexport default useFetch"]},"metadata":{},"sourceType":"module"}