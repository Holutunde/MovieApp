{"ast":null,"code":"var _jsxFileName = \"/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = (method = 'GET', options = {}) => {\n  _s();\n\n  var _response$results;\n\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/movie/{movieId}?api_key=8063bc7c0a515fe2409caee8d299de93&language=en-US`;\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options\n        });\n        const json = await res.json();\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: response === null || response === void 0 ? void 0 : (_response$results = response.results) === null || _response$results === void 0 ? void 0 : _response$results.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie === null || movie === void 0 ? void 0 : movie.poster_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: movie === null || movie === void 0 ? void 0 : movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie === null || movie === void 0 ? void 0 : movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie === null || movie === void 0 ? void 0 : movie.vote_average, \" (\", movie === null || movie === void 0 ? void 0 : movie.vote_count, \" votes)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 24\n          }, this)]\n        }, movie === null || movie === void 0 ? void 0 : movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MovieDetail, \"49/I0r598LgCIIluHdgpQ1BsF8Y=\");\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/MovieDetail.js"],"names":["React","useEffect","useState","MovieDetail","method","options","response","setResponse","error","setError","loading","setLoading","endpoint","fetchData","res","fetch","json","message","results","map","movie","poster_path","title","overview","vote_average","vote_count","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAG,CAACC,MAAM,GAAG,KAAV,EAAkBC,OAAO,GAAG,EAA5B,KAAmC;AAAA;;AAAA;;AACrD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAI,sGAAlB;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAD,EAAW;AAChCR,UAAAA,MADgC;AAEhC,aAAGC;AAF6B,SAAX,CAAvB;AAIA,cAAMW,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AAEAT,QAAAA,WAAW,CAACS,IAAD,CAAX;AACD,OARD,CAQE,OAAOR,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAVD,SAUU;AACRG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAdD;;AAgBAE,IAAAA,SAAS;AACV,GApBQ,EAoBN,EApBM,CAAT;AAsBD,sBACC;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEaH,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,GAEJF,KAAK,gBACN;AAAA,gBAAOA,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAES;AAAd;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACEX,QADF,aACEA,QADF,4CACEA,QAAQ,CAAEY,OADZ,sDACE,kBAAmBC,GAAnB,CAAwBC,KAAD,IAAW;AAClC,4BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAG,kCAAiCA,KAAlC,aAAkCA,KAAlC,uBAAkCA,KAAK,CAAEC,WAAY,EAA/D;AAAkE,YAAA,GAAG,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAIF,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEG;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,mCAAYH,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEI,YAAnB,QAAmCJ,KAAnC,aAAmCA,KAAnC,uBAAmCA,KAAK,CAAEK,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAA6BL,KAA7B,aAA6BA,KAA7B,uBAA6BA,KAAK,CAAEM,EAApC;AAAA;AAAA;AAAA;AAAA,gBADF;AAQJ,OATI;AADF;AAAA;AAAA;AAAA;AAAA,YAPf;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA,CAlDD;;GAAMvB,W;;KAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nconst MovieDetail = (method = 'GET',  options = {}) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/movie/{movieId}?api_key=8063bc7c0a515fe2409caee8d299de93&language=en-US`\n\n    const fetchData = async () => {\n      try {\n        const res = await fetch(endpoint, {\n          method,\n          ...options,\n        });\n        const json = await res.json();\n\n        setResponse(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false)\n      }\n    };\n\n    fetchData();\n  }, [ ])\n\n\treturn (\n\t\t<div>\n\t <h3>Now Playing</h3>\n              {loading\n                ? <span>Loading...</span>\n                : error\n               ? <span>{error?.message}</span>\n                 : (\n                 <div className=\"row\">\n                  {response?.results?.map((movie) => {\n                   return (\n                     <div className=\"column\" key={movie?.id}>\n                       <img src={`https://image.tmdb.org/t/p/w500${movie?.poster_path}`} alt=\"\" />\n                       <h5>{movie?.title}</h5>\n                       <p>{movie?.overview}</p>\n                       <p>Rating: {movie?.vote_average} ({movie?.vote_count} votes)</p>\n                  </div>\n                )\n              })}\n            </div>\n          )}\t\t\n\t\t</div>\n\t)\n}\n\nexport default MovieDetail\n"]},"metadata":{},"sourceType":"module"}