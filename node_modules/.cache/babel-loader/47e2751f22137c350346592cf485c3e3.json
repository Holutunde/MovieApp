{"ast":null,"code":"var _jsxFileName = \"/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(\"Cruella\");\n\n  const searchMovie = async e => {\n    e.preventDefault();\n    const apiURI = `https://api.themoviedb.org/3/search/movie?api_key=8063bc7c0a515fe2409caee8d299de93&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const response = await fetch(apiURI);\n      const data = await response.json();\n      setMovies(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  console.log(movies.results);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovie,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        type: \"text\",\n        placeholder: \"search for a movie\",\n        i: true,\n        className: \"searchbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"7XBj56vA7CL3193GJE48zQGVHa8=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/olutundesokunbi/Documents/React/movie-stuff/src/components/Search.js"],"names":["React","useState","useEffect","Card","Search","movies","setMovies","query","setQuery","searchMovie","e","preventDefault","apiURI","response","fetch","data","json","err","console","error","log","results","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAKA,eAAe,SAASC,MAAT,GAAmB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,SAAD,CAAlC;;AAEA,QAAMQ,WAAW,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,MAAM,GAAI,2GAA0GL,KAAM,6BAAhI;;AAEA,QAAI;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAD,CAA5B;AACA,YAAMG,IAAI,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEAV,MAAAA,SAAS,CAACS,IAAD,CAAT;AAEH,KAND,CAME,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,GAdE;;AAePC,EAAAA,OAAO,CAACE,GAAR,CAAYf,MAAM,CAACgB,OAAnB;AAEA,sBACM;AAAA,2BAEG;AAAM,MAAA,QAAQ,EAAEZ,WAAhB;AAAA,8BACG;AACC,QAAA,KAAK,EAAEF,KADR;AAEC,QAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV,CAF1B;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,WAAW,EAAC,oBAJb;AAIiC,QAAA,CAAC,MAJlC;AAKC,QAAA,SAAS,EAAC;AALX;AAAA;AAAA;AAAA;AAAA,cADH,eAQH;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH,mBADN;AAgBC;;GArCuBnB,M;;KAAAA,M","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport Card from './Card';\n\n\n\n\nexport default function Search( ) {\n       const [movies, setMovies] = useState([]);\n       const [query, setQuery] = useState(\"Cruella\");\n     \n       const searchMovie = async (e) => {\n        e.preventDefault();\n\n        const apiURI = `https://api.themoviedb.org/3/search/movie?api_key=8063bc7c0a515fe2409caee8d299de93&language=en-US&query=${query}&page=1&include_adult=false`\n      \n        try {\n            const response = await fetch(apiURI);\n            const data =  await response.json()\n                \n            setMovies(data);\n\n        } catch (err) {\n            console.error(err);\n        }\n    }\nconsole.log(movies.results)\n\nreturn (\n      <>\n       \n         <form onSubmit={searchMovie}>\n            <input\n             value={query}\n             onChange={(e) => setQuery(e.target.value)}\n             type=\"text\"\n             placeholder=\"search for a movie\"i\n             className=\"searchbox\"\n            />\n\t     <button type=\"submit\">Search</button>\n          </form>\n          \n       </>\n    )\n}"]},"metadata":{},"sourceType":"module"}